#!/usr/bin/env raku

#my @exclude-dbs                    = 'CleverCAD_CADStore';
 my @exclude-dbs                    = ();
 my Str $isp-server-ip-label        = 'catsmdev01';
 my Str $isp-server-ip-address      = '10.11.101.39';
 my Str $never-fail-host-name       = 'CTBUSRTO1DB1Qv';
#my Str $client-ip-label            = 'CTBUSRT1DB1MGT'; my Str $client-ip-address = '10.11.138.147';
 my Str $client-ip-label            = 'CTBUSRT1DB2MGT'; my Str $client-ip-address = '10.11.139.145';

 my Str  $sql-server-name           = 'CTBUSRTO1DB1Qv';
 my Str  $sql-server-instance-name  = $sql-server-name.uc;
#my Str  $sql-server-instance-name  = 'RTSQL';

 my Str $config-drive               = '%SYSTEMDRIVE%';
 my Str $baapi-product-directory    = $config-drive ~ '\Program Files\Tivoli\TSM\baclient';
 my Str $dp4sql-product-directory   = $config-drive ~ '\Program Files\Tivoli\TSM\TDPSql';
 my Str $config-base-directory      = $config-drive ~ '\WMATA\ITIO\EnterpriseBackup\ISP\NODES';
 my Int $HTTPPORT                   = 1581 - 2;
 my Int $WEBPORT                    = 1582 - 2;

unit sub MAIN(
    Str:D :$directory-container-prefix!,                    #= new directory container STGPOOL prefix (I.e. 'DP4SQL', 'BA')
    Str:D :$tape-devclass!,                                 #= tape DEVCLASS name
    :$retention                             = 14,           #= number of days to retain backups
    :$drmdbbackupexpiredays                 = 5,            #= DRMDBBACKUPEXPIREDAYS for REUSEDELAY
    :$node,                                                 #= optional NODE name
);

#   Storage

sub define-STGPOOLs () {
    my $output = qq:to/ENDOFDEFINESTGPOOLS/;
    DEFINE STGPOOL  TRAP                                    DISK
    DEFINE STGPOOL  {$directory-container-prefix}_TAPE_1OF1 {$tape-devclass} STGTYPE=DEVCLASS  POOLTYPE=PRIMARY MAXSCRATCH=9999 RECLAIM=100 RECLAIMPROCESS=2 COLLOCATE=NO                        DESCRIPTION='{$directory-container-prefix} - PSP on tape'                      PROTECTSTGPOOL={$directory-container-prefix}_TAPE_1OF1 REUSEDELAY={$drmdbbackupexpiredays}
    DEFINE STGPOOL  {$directory-container-prefix}_TAPE_2OF2 {$tape-devclass}                   POOLTYPE=COPY    MAXSCRATCH=9999 RECLAIM=100 RECLAIMPROCESS=2 COLLOCATE=NO                        DESCRIPTION='{$directory-container-prefix} - CSP on tape'                                                                             REUSEDELAY={$drmdbbackupexpiredays}
    DEFINE STGPOOL  {$directory-container-prefix}_TAPE_1OF2 {$tape-devclass} STGTYPE=DEVCLASS  POOLTYPE=PRIMARY MAXSCRATCH=9999 RECLAIM=100 RECLAIMPROCESS=2 COLLOCATE=NO                        DESCRIPTION='{$directory-container-prefix} - PSP on tape + CSP on tape'        PROTECTSTGPOOL={$directory-container-prefix}_TAPE_1OF2 REUSEDELAY={$drmdbbackupexpiredays}
    DEFINE STGPOOL  {$directory-container-prefix}_DISK_1OF1                  STGTYPE=DIRECTORY POOLTYPE=PRIMARY                                                                                  DESCRIPTION='{$directory-container-prefix} - PSP on disk only'                 PROTECTSTGPOOL={$directory-container-prefix}_DISK_1OF1 REUSEDELAY={$drmdbbackupexpiredays}
    DEFINE STGPOOL  {$directory-container-prefix}_DISK_1OF2                  STGTYPE=DIRECTORY POOLTYPE=PRIMARY                                                                                  DESCRIPTION='{$directory-container-prefix} - PSP on disk only + CSP on tape'   PROTECTSTGPOOL={$directory-container-prefix}_DISK_1OF2 REUSEDELAY={$drmdbbackupexpiredays}
    DEFINE STGPOOL  {$directory-container-prefix}_DKTP_1OF1                  STGTYPE=DIRECTORY POOLTYPE=PRIMARY                 MAXSIZE=768G NEXTSTGPOOL={$directory-container-prefix}_TAPE_1OF1 DESCRIPTION='{$directory-container-prefix} - PSP on disk & tape'               PROTECTSTGPOOL={$directory-container-prefix}_DKTP_1OF1 REUSEDELAY={$drmdbbackupexpiredays}
    DEFINE STGPOOL  {$directory-container-prefix}_DKTP_1OF2                  STGTYPE=DIRECTORY POOLTYPE=PRIMARY                 MAXSIZE=768G NEXTSTGPOOL={$directory-container-prefix}_TAPE_1OF2 DESCRIPTION='{$directory-container-prefix} - PSP on disk & tape + CSP on tape' PROTECTSTGPOOL={$directory-container-prefix}_DKTP_1OF2 REUSEDELAY={$drmdbbackupexpiredays}
    ENDOFDEFINESTGPOOLS
    put $output.trans(' ' => ' ', :squash);
}

sub update-BACKUP-STGPOOL-script () {
    my $output = qq:to/ENDOFUPDATEBACKUPSTGPOOLSCRIPT/;
    /* BACKUP  STGPOOL  {$directory-container-prefix}_TAPE_1OF2 {$directory-container-prefix}_TAPE_2OF2 */
    /* DEFINE  STGRULE {$directory-container-prefix}_TAPE_2OF2 {$directory-container-prefix}_TAPE_2OF2 ACTIONTYPE=COPY SRCPOOLS={$directory-container-prefix}_DISK_1OF2,{$directory-container-prefix}_DKTP_1OF2
    /* SET     DRMPRIMSTGPOOL <all-current>,{$directory-container-prefix}_TAPE_1OF1,{$directory-container-prefix}_TAPE_1OF2,{$directory-container-prefix}_DISK_1OF1,{$directory-container-prefix}_DISK_1OF2,{$directory-container-prefix}_DKTP_1OF1,{$directory-container-prefix}_DKTP_1OF2 */
    /* SET     DRMCOPYSTGPOOL <all-current>,{$directory-container-prefix}_TAPE_2OF2 */
    /* PROTECT STGPOOL  {$directory-container-prefix}_DISK_1OF1 WAIT=NO */
    /* PROTECT STGPOOL  {$directory-container-prefix}_DISK_1OF2 WAIT=NO */
    /* PROTECT STGPOOL  {$directory-container-prefix}_DKTP_1OF1 WAIT=NO */
    /* PROTECT STGPOOL  {$directory-container-prefix}_DKTP_1OF2 WAIT=NO */
    /* PROTECT STGPOOL  {$directory-container-prefix}_TAPE_1OF1 WAIT=NO */
    /* PROTECT STGPOOL  {$directory-container-prefix}_TAPE_1OF2 WAIT=NO */
    ENDOFUPDATEBACKUPSTGPOOLSCRIPT
    put $output.trans(' ' => ' ', :squash);
}

#   Policy

sub define-policy-stack() {
    my $output = qq:to/ENDOFDEFINEPOLICYSTACK/;
    DEFINE   DOMAIN       {$directory-container-prefix} ARCHRETENTION=90 BACKRETENTION=90
    DEFINE   POLICYSET    {$directory-container-prefix} STANDARD
    DEFINE   MGMTCLASS    {$directory-container-prefix} STANDARD STANDARD                            MIGDESTINATION=TRAP
    DEFINE   COPYGROUP    {$directory-container-prefix} STANDARD STANDARD      STANDARD TYPE=ARCHIVE    DESTINATION={$directory-container-prefix}_DKTP_1OF1 RETVER=14
    DEFINE   COPYGROUP    {$directory-container-prefix} STANDARD STANDARD      STANDARD TYPE=BACKUP     DESTINATION={$directory-container-prefix}_DKTP_1OF1 RETEXTRA=14 RETONLY=14 VERDELETED=NOLIMIT VEREXISTS=NOLIMIT
    ASSIGN   DEFMGMTCLASS {$directory-container-prefix} STANDARD STANDARD
    ENDOFDEFINEPOLICYSTACK
    $output ~= qq:to/ENDOFDEFINEMGMTCLASS/;
    DEFINE   MGMTCLASS    {$directory-container-prefix} STANDARD D{$retention}_TAPE_1OF1                        MIGDESTINATION=TRAP
    DEFINE   MGMTCLASS    {$directory-container-prefix} STANDARD D{$retention}_TAPE_1OF2                        MIGDESTINATION=TRAP
    DEFINE   MGMTCLASS    {$directory-container-prefix} STANDARD D{$retention}_DISK_1OF1                        MIGDESTINATION=TRAP
    DEFINE   MGMTCLASS    {$directory-container-prefix} STANDARD D{$retention}_DISK_1OF2                        MIGDESTINATION=TRAP
    DEFINE   MGMTCLASS    {$directory-container-prefix} STANDARD D{$retention}_DKTP_1OF1                        MIGDESTINATION=TRAP
    DEFINE   MGMTCLASS    {$directory-container-prefix} STANDARD D{$retention}_DKTP_1OF2                        MIGDESTINATION=TRAP
    DEFINE   COPYGROUP    {$directory-container-prefix} STANDARD D{$retention}_TAPE_1OF1 STANDARD TYPE=BACKUP      DESTINATION={$directory-container-prefix}_TAPE_1OF1 RETEXTRA={$retention} RETONLY={$retention} VERDELETED=NOLIMIT VEREXISTS=NOLIMIT
    DEFINE   COPYGROUP    {$directory-container-prefix} STANDARD D{$retention}_TAPE_1OF2 STANDARD TYPE=BACKUP      DESTINATION={$directory-container-prefix}_TAPE_1OF2 RETEXTRA={$retention} RETONLY={$retention} VERDELETED=NOLIMIT VEREXISTS=NOLIMIT
    DEFINE   COPYGROUP    {$directory-container-prefix} STANDARD D{$retention}_DISK_1OF1 STANDARD TYPE=BACKUP      DESTINATION={$directory-container-prefix}_DISK_1OF1 RETEXTRA={$retention} RETONLY={$retention} VERDELETED=NOLIMIT VEREXISTS=NOLIMIT
    DEFINE   COPYGROUP    {$directory-container-prefix} STANDARD D{$retention}_DISK_1OF2 STANDARD TYPE=BACKUP      DESTINATION={$directory-container-prefix}_DISK_1OF2 RETEXTRA={$retention} RETONLY={$retention} VERDELETED=NOLIMIT VEREXISTS=NOLIMIT
    DEFINE   COPYGROUP    {$directory-container-prefix} STANDARD D{$retention}_DKTP_1OF1 STANDARD TYPE=BACKUP      DESTINATION={$directory-container-prefix}_DKTP_1OF1 RETEXTRA={$retention} RETONLY={$retention} VERDELETED=NOLIMIT VEREXISTS=NOLIMIT
    DEFINE   COPYGROUP    {$directory-container-prefix} STANDARD D{$retention}_DKTP_1OF2 STANDARD TYPE=BACKUP      DESTINATION={$directory-container-prefix}_DKTP_1OF2 RETEXTRA={$retention} RETONLY={$retention} VERDELETED=NOLIMIT VEREXISTS=NOLIMIT
    ENDOFDEFINEMGMTCLASS
    $output ~= qq:to/ENDOFVALIDATEACTIVATE/;
    VALIDATE POLICYSET    {$directory-container-prefix} STANDARD
    ACTIVATE POLICYSET    {$directory-container-prefix} STANDARD
    ENDOFVALIDATEACTIVATE
    put $output.trans(' ' => ' ', :squash);
}

sub define-cloptset (Str:D $node) {
    my $client-option-set   = $node ~ '.COS';
    my $sequence-number     = 100;
    my $output = qq:to/ENDOFDEFINECLOPTSETDEFAULTS/;
    DEFINE CLOPTSET  $client-option-set
    DEFINE CLIENTOPT $client-option-set INCLEXCL "INCLUDE '{$sql-server-instance-name}\\meta\\...\\*'            D{$retention}_DISK_1OF1" SEQ={$sequence-number += 2}
    DEFINE CLIENTOPT $client-option-set INCLEXCL "INCLUDE '{$sql-server-instance-name}\\data\\...\\full*'        D{$retention}_DKTP_1OF1" SEQ={$sequence-number += 2}
    DEFINE CLIENTOPT $client-option-set INCLEXCL "INCLUDE '{$sql-server-instance-name}\\data\\...\\full*\\*'     D{$retention}_DKTP_1OF1" SEQ={$sequence-number += 2}
    DEFINE CLIENTOPT $client-option-set INCLEXCL "INCLUDE '{$sql-server-instance-name}\\data\\...\\diff*'        D{$retention}_DKTP_1OF1" SEQ={$sequence-number += 2}
    DEFINE CLIENTOPT $client-option-set INCLEXCL "INCLUDE '{$sql-server-instance-name}\\data\\...\\diff*\\*'     D{$retention}_DKTP_1OF1" SEQ={$sequence-number += 2}
    DEFINE CLIENTOPT $client-option-set INCLEXCL "INCLUDE '{$sql-server-instance-name}\\data\\...\\log*'         D{$retention}_DKTP_1OF1" SEQ={$sequence-number += 2}
    DEFINE CLIENTOPT $client-option-set INCLEXCL "INCLUDE '{$sql-server-instance-name}\\data\\...\\log*\\...\\*' D{$retention}_DKTP_1OF1" SEQ={$sequence-number += 2}
    ENDOFDEFINECLOPTSETDEFAULTS
    for @exclude-dbs -> $db-name {
        $output ~= qq:to/ENDOFDEFINECLOPTSETEXCEPTIONS/;
        DEFINE CLIENTOPT $client-option-set INCLEXCL "INCLUDE             '{$sql-server-instance-name}\\data\\...\\{$db-name}\\full*'         D{$retention}_TAPE_1OF1" SEQ={$sequence-number += 2}
        DEFINE CLIENTOPT $client-option-set INCLEXCL "EXCLUDE.DEDUP       '{$sql-server-instance-name}\\data\\...\\{$db-name}\\full*'"                                 SEQ={$sequence-number += 2}
        DEFINE CLIENTOPT $client-option-set INCLEXCL "EXCLUDE.COMPRESSION '{$sql-server-instance-name}\\data\\...\\{$db-name}\\full*'"                                 SEQ={$sequence-number += 2}
        DEFINE CLIENTOPT $client-option-set INCLEXCL "INCLUDE             '{$sql-server-instance-name}\\data\\...\\{$db-name}\\full*\\*'      D{$retention}_TAPE_1OF1" SEQ={$sequence-number += 2}
        DEFINE CLIENTOPT $client-option-set INCLEXCL "EXCLUDE.DEDUP       '{$sql-server-instance-name}\\data\\...\\{$db-name}\\full*\\*'"                              SEQ={$sequence-number += 2}
        DEFINE CLIENTOPT $client-option-set INCLEXCL "EXCLUDE.COMPRESSION '{$sql-server-instance-name}\\data\\...\\{$db-name}\\full*\\*'"                              SEQ={$sequence-number += 2}
        DEFINE CLIENTOPT $client-option-set INCLEXCL "INCLUDE             '{$sql-server-instance-name}\\data\\...\\{$db-name}\\diff*'         D{$retention}_TAPE_1OF1" SEQ={$sequence-number += 2}
        DEFINE CLIENTOPT $client-option-set INCLEXCL "EXCLUDE.DEDUP       '{$sql-server-instance-name}\\data\\...\\{$db-name}\\diff*'"                                 SEQ={$sequence-number += 2}
        DEFINE CLIENTOPT $client-option-set INCLEXCL "EXCLUDE.COMPRESSION '{$sql-server-instance-name}\\data\\...\\{$db-name}\\diff*'"                                 SEQ={$sequence-number += 2}
        DEFINE CLIENTOPT $client-option-set INCLEXCL "INCLUDE             '{$sql-server-instance-name}\\data\\...\\{$db-name}\\diff*\\*'      D{$retention}_TAPE_1OF1" SEQ={$sequence-number += 2}
        DEFINE CLIENTOPT $client-option-set INCLEXCL "EXCLUDE.DEDUP       '{$sql-server-instance-name}\\data\\...\\{$db-name}\\diff*\\*'"                              SEQ={$sequence-number += 2}
        DEFINE CLIENTOPT $client-option-set INCLEXCL "EXCLUDE.COMPRESSION '{$sql-server-instance-name}\\data\\...\\{$db-name}\\diff*\\*'"                              SEQ={$sequence-number += 2}
        DEFINE CLIENTOPT $client-option-set INCLEXCL "INCLUDE             '{$sql-server-instance-name}\\data\\...\\{$db-name}\\log*'          D{$retention}_TAPE_1OF1" SEQ={$sequence-number += 2}
        DEFINE CLIENTOPT $client-option-set INCLEXCL "EXCLUDE.DEDUP       '{$sql-server-instance-name}\\data\\...\\{$db-name}\\log*'"                                  SEQ={$sequence-number += 2}
        DEFINE CLIENTOPT $client-option-set INCLEXCL "EXCLUDE.COMPRESSION '{$sql-server-instance-name}\\data\\...\\{$db-name}\\log*'"                                  SEQ={$sequence-number += 2}
        DEFINE CLIENTOPT $client-option-set INCLEXCL "INCLUDE             '{$sql-server-instance-name}\\data\\...\\{$db-name}\\log*\\...\\*'  D{$retention}_TAPE_1OF1" SEQ={$sequence-number += 2}
        DEFINE CLIENTOPT $client-option-set INCLEXCL "EXCLUDE.DEDUP       '{$sql-server-instance-name}\\data\\...\\{$db-name}\\log*\\...\\*'"                          SEQ={$sequence-number += 2}
        DEFINE CLIENTOPT $client-option-set INCLEXCL "EXCLUDE.COMPRESSION '{$sql-server-instance-name}\\data\\...\\{$db-name}\\log*\\...\\*'"                          SEQ={$sequence-number += 2}
        ENDOFDEFINECLOPTSETEXCEPTIONS
    }
    put $output.trans(' ' => ' ', :squash);
}

sub pasteable-backup-archive-configuration-file () {
    $HTTPPORT                      += 2;
    $WEBPORT                       += 2;
#   my Str  $NODENAME               = $never-fail-host-name.uc;
    my Str  $NODENAME               = $client-ip-label.uc;
    my Str  $node-base-directory    = $config-base-directory ~ '\\' ~ $NODENAME;
    my Str  $password               = $NODENAME.uc;
    my Str  $contact                = 'Burns, Richard';
    my Str  $email-address          = 'itappsbusteam@wmata.com';
    my Int  $maxnummp               = 2;
    my Str  $domain                 = 'WIND.DOM';
    my Str  $ba-cos                 = 'WIND.COS';
    my Str  $schedule               = '1800';
    put 'REGISTER NODE '
        ~ $NODENAME ~ ' '           ~ $password         ~ ' '
        ~ 'CLOPTSET='               ~ $ba-cos           ~ ' '
        ~ 'DOMAIN='                 ~ $domain           ~ ' '
        ~ 'MAXNUMMP='               ~ $maxnummp         ~ ' '
        ~ 'USER=NONE'                                   ~ ' '
        ~ 'EMAILADDRESS='           ~ $email-address    ~ ' '
        ~ 'CONTACT="'               ~ $contact          ~ '"';
    put 'DEFINE ASSOCIATION '
        ~ $domain                                       ~ ' '
        ~ $schedule                                     ~ ' '
        ~ $NODENAME;
    my Str  $DOMAIN                 = '"' ~ $config-drive ~ '"';
    my Str  $ERRORLOGRETENTION      = '14 D';
    my Str  $SCHEDLOGRETENTION      = '14 D';
    my Str  $dsm-opt-file           = $node-base-directory ~ '\\' ~ 'dsm.opt';

    my Str  $dsm-shortcut-name      = 'dsm.lnk';
    my Str  $dsmc-shortcut-name     = 'dsmc.lnk';

    put q:to/ENDOFPASTEABLEBACKUPARCHIVECONFIGURATIONFILE/; 

    MKDIR \qq[$node-base-directory]\DEDUPCACHE
    CD /D \qq[$node-base-directory]
    ECHO  CLUSTERDISKSONLY           NO > \qq[$dsm-opt-file]
    ECHO  CLUSTERNODE                NO >> \qq[$dsm-opt-file]
    ECHO  COMMMETHOD                 TCPIP >> \qq[$dsm-opt-file]
    ECHO  COMPRESSALWAYS             YES >> \qq[$dsm-opt-file]
    ECHO  COMPRESSION                NO >> \qq[$dsm-opt-file]
    ECHO  DEDUPCACHEPATH             "\qq[$node-base-directory]\DEDUPCACHE"  >> \qq[$dsm-opt-file]
    ECHO  DEDUPCACHESIZE             2048  >> \qq[$dsm-opt-file]
    ECHO  DEDUPLICATION              NO  >> \qq[$dsm-opt-file]
    ECHO  DISKBUFFSIZE               32 >> \qq[$dsm-opt-file]
    ECHO  DOMAIN                     \qq[$DOMAIN] >> \qq[$dsm-opt-file]
    ECHO  ENABLEINSTRUMENTATION      NO >> \qq[$dsm-opt-file]
    ECHO  ENABLEDEDUPCACHE           NO >> \qq[$dsm-opt-file]
    ECHO  ERRORLOGNAME               "\qq[$node-base-directory]\dsmerror.log" >> \qq[$dsm-opt-file]
    ECHO  ERRORLOGRETENTION          \qq[$ERRORLOGRETENTION] >> \qq[$dsm-opt-file]
    ECHO  HTTPPORT                   \qq[$HTTPPORT] >> \qq[$dsm-opt-file]
    ECHO *INCLEXCL                   "\qq[$node-base-directory]\INCLEXCL.ISP" >> \qq[$dsm-opt-file]
    ECHO *INSTRLOGMAX                25 >> \qq[$dsm-opt-file]
    ECHO  INSTRLOGNAME               "\qq[$node-base-directory]\dsminstr.log" >> \qq[$dsm-opt-file]
    ECHO  LANGUAGE                   ENU >> \qq[$dsm-opt-file]
    ECHO  MANAGEDSERVICES            SCHEDULE WEBCLIENT >> \qq[$dsm-opt-file]
    ECHO  NODENAME                   \qq[$NODENAME] >> \qq[$dsm-opt-file]
    ECHO  PASSWORDACCESS             GENERATE >> \qq[$dsm-opt-file]
    ECHO *PRESCHEDULECMD             "\qq[$node-base-directory]\PREBACKUP.BAT" >> \qq[$dsm-opt-file]
    ECHO *POSTSCHEDULECMD            "\qq[$node-base-directory]\POSTBACKUP.BAT" >> \qq[$dsm-opt-file]
    ECHO  RESOURCEUTILIZATION        10 >> \qq[$dsm-opt-file]
    ECHO  SCHEDLOGNAME               "\qq[$node-base-directory]\dsmsched.log" >> \qq[$dsm-opt-file]
    ECHO  SCHEDLOGRETENTION          \qq[$SCHEDLOGRETENTION] >> \qq[$dsm-opt-file]
    ECHO  SCHEDMODE                  PROMPTED >> \qq[$dsm-opt-file]
    ECHO  SUBDIR                     YES >> \qq[$dsm-opt-file]
    ECHO  TCPBUFFSIZE                128 >> \qq[$dsm-opt-file]
    ECHO  TCPCLIENTADDRESS           \qq[$client-ip-address] >> \qq[$dsm-opt-file]
    ECHO  TCPPORT                    1500 >> \qq[$dsm-opt-file]
    ECHO  TCPSERVERADDRESS           \qq[$isp-server-ip-address] >> \qq[$dsm-opt-file]
    ECHO  TCPWINDOWSIZE              63 >> \qq[$dsm-opt-file]
    ECHO  TXNBYTELIMIT               25600K >> \qq[$dsm-opt-file]
    ECHO  WEBPORTS                   \qq[$WEBPORT] \qq[$HTTPPORT] >> \qq[$dsm-opt-file]

    SET DSM_DIR=\qq[$baapi-product-directory]
    ECHO %PATH% | FIND /I "%DSM_DIR%" > DSM_DIR_CHECK.TST
    FOR %I IN (DSM_DIR_CHECK.TST) DO SET DSM_DIR_CHECK=%~zI
    IF %DSM_DIR_CHECK% EQU 0 SET PATH=%DSM_DIR%;%PATH%
    DEL DSM_DIR_CHECK.TST
    dsmc query session -optfile=\qq[$dsm-opt-file]
    dsmcutil install scheduler /name:"IBM Spectrum Protect Scheduler: \qq[$NODENAME]" /node:\qq[$NODENAME] /password:\qq[$password] /autostart:no /startnow:no /optfile:"\qq[$dsm-opt-file]"
    dsmcutil install cad /name:"IBM Spectrum Protect Acceptor: \qq[$NODENAME]" /node:\qq[$NODENAME] /password:\qq[$password] /autostart:yes /startnow:yes /cadschedname:"IBM Spectrum Protect Scheduler: \qq[$NODENAME]" /optfile:"\qq[$dsm-opt-file]"
    powershell "$s=(New-Object -COM WScript.Shell).CreateShortcut('\qq[$node-base-directory]\\\qq[$dsm-shortcut-name]');$s.TargetPath='\qq[$baapi-product-directory]\\dsm.exe';$s.Arguments='\\"-optfile=\qq[$dsm-opt-file]\\"';$s.Save()"
    powershell "$s=(New-Object -COM WScript.Shell).CreateShortcut('\qq[$node-base-directory]\\\qq[$dsmc-shortcut-name]');$s.TargetPath='\qq[$baapi-product-directory]\\dsmc.exe';$s.Arguments='\\"-optfile=\qq[$dsm-opt-file]\\"';$s.Save()"
    ENDOFPASTEABLEBACKUPARCHIVECONFIGURATIONFILE
}

sub pasteable-dp4sql-configuration-files () {
    $HTTPPORT                      += 2;
    $WEBPORT                       += 2;
    my Str  $NODENAME               = $sql-server-instance-name.uc ~ '-SQL';
    my Str  $EXCLUDEDB              = '/EXCLUDEDB=master,model,msdb';
    $EXCLUDEDB                     ~= ',' ~ @exclude-dbs.join(',') if @exclude-dbs;
    my Str  $node-base-directory    = $config-base-directory ~ '\\' ~ $NODENAME;
    my Str  $scripts-base-directory = $node-base-directory ~ '\\SCRIPTS';
#   my Str  $password               = $NODENAME.lc;
    my Str  $password               = 'admin1234';
    my Str  $contact                = 'Burns, Richard';
    my Str  $email-address          = 'itappsbusteam@wmata.com';
    my Int  $maxnummp               = 2;
    my Str  $domain                 = 'MSSQL.DOM';
    my Str  $cos                    = $NODENAME ~ '.COS';
    my Str  $schedule               = '1900';
    my Int  $default-stripes        = 1;
    my Int  $log-prune              = 60;
    put 'DEFINE CLOPTSET '          ~ $cos;
#   put 'DEFINE CLIENTOPT '         ~ $cos              ~ ' '
#       ~ '...........';
    put 'REGISTER NODE '
        ~ $NODENAME ~ ' '           ~ $password         ~ ' '
        ~ 'CLOPTSET='               ~ $cos              ~ ' '
        ~ 'DOMAIN='                 ~ $domain           ~ ' '
        ~ 'MAXNUMMP='               ~ $maxnummp         ~ ' '
        ~ 'USER='                   ~ $NODENAME         ~ ' '
        ~ 'BACKDEL=YES'                                 ~ ' '
        ~ 'TXNGROUPMAX=12'                              ~ ' '
        ~ 'EMAILADDRESS='           ~ $email-address    ~ ' '
        ~ 'CONTACT="'               ~ $contact          ~ '"';
    put 'DEFINE ASSOCIATION '
        ~ $domain                                       ~ ' '
        ~ $schedule                                     ~ ' '
        ~ $NODENAME;
    my Str  $DOMAIN                 = '"' ~ $config-drive ~ '"';
    my Str  $ERRORLOGRETENTION      = '14 D';
    my Str  $SCHEDLOGRETENTION      = '14 D';
    my Str  $dsm-opt-file           = $node-base-directory ~ '\\' ~ 'dsm.opt';
    my Str  $dsm-shortcut-name      = 'dsm.lnk';
    my Str  $dsmc-shortcut-name     = 'dsmc.lnk';
    my Str  $tdpsql-cfg-file        = $node-base-directory ~ '\\' ~ 'tdpsql.cfg';
    my Str  $tdpsql-shortcut-name   = 'tdpsql.lnk';

    put q:to/ENDOFPASTEABLECONFIGURATIONFILES/; 

    MKDIR \qq[$node-base-directory]\DEDUPCACHE
    CD /D \qq[$node-base-directory]
    ECHO  COMMMETHOD                 TCPIP >> \qq[$dsm-opt-file]
    ECHO  COMPRESSALWAYS             YES >> \qq[$dsm-opt-file]
    ECHO  COMPRESSION                YES >> \qq[$dsm-opt-file]
    ECHO  DEDUPCACHEPATH             "\qq[$node-base-directory]\DEDUPCACHE"  >> \qq[$dsm-opt-file]
    ECHO  DEDUPCACHESIZE             2048 >> \qq[$dsm-opt-file]
    ECHO  DEDUPLICATION              YES >> \qq[$dsm-opt-file]
    ECHO  DISKBUFFSIZE               32 >> \qq[$dsm-opt-file]
    ECHO  ENABLEDEDUPCACHE           NO >> \qq[$dsm-opt-file]
    ECHO  ENABLEINSTRUMENTATION      NO >> \qq[$dsm-opt-file]
    ECHO  ERRORLOGNAME               "\qq[$node-base-directory]\dsmerror.log" >> \qq[$dsm-opt-file]
    ECHO  ERRORLOGRETENTION          \qq[$ERRORLOGRETENTION] >> \qq[$dsm-opt-file]
    ECHO  HTTPPORT                   \qq[$HTTPPORT] >> \qq[$dsm-opt-file]
    ECHO *INCLEXCL                   "\qq[$node-base-directory]\INCLEXCL.ISP" >> \qq[$dsm-opt-file]
    ECHO *INSTRLOGMAX                25 >> \qq[$dsm-opt-file]
    ECHO  INSTRLOGNAME               "\qq[$node-base-directory]\dsminstr.log" >> \qq[$dsm-opt-file]
    ECHO  LANGUAGE                   ENU >> \qq[$dsm-opt-file]
    ECHO  MANAGEDSERVICES            SCHEDULE >> \qq[$dsm-opt-file]
    ECHO  NODENAME                   \qq[$NODENAME] >> \qq[$dsm-opt-file]
    ECHO  PASSWORDACCESS             GENERATE >> \qq[$dsm-opt-file]
    ECHO *PRESCHEDULECMD             "\qq[$node-base-directory]\PREBACKUP.BAT" >> \qq[$dsm-opt-file]
    ECHO *POSTSCHEDULECMD            "\qq[$node-base-directory]\POSTBACKUP.BAT" >> \qq[$dsm-opt-file]
    ECHO  SCHEDLOGNAME               "\qq[$node-base-directory]\dsmsched.log" >> \qq[$dsm-opt-file]
    ECHO  SCHEDLOGRETENTION          \qq[$SCHEDLOGRETENTION] >> \qq[$dsm-opt-file]
    ECHO  SCHEDMODE                  PROMPTED >> \qq[$dsm-opt-file]
    ECHO  TCPBUFFSIZE                128 >> \qq[$dsm-opt-file]
    ECHO  TCPCLIENTADDRESS           \qq[$client-ip-address] >> \qq[$dsm-opt-file]
    ECHO  TCPPORT                    1500 >> \qq[$dsm-opt-file]
    ECHO  TCPSERVERADDRESS           \qq[$isp-server-ip-address] >> \qq[$dsm-opt-file]
    ECHO  TCPWINDOWSIZE              63 >> \qq[$dsm-opt-file]
    ECHO  TXNBYTELIMIT               25600K >> \qq[$dsm-opt-file]
    ECHO  WEBPORTS                   \qq[$WEBPORT] \qq[$HTTPPORT] >> \qq[$dsm-opt-file]

    SET DSM_DIR=\qq[$baapi-product-directory]
    ECHO %PATH% | FIND /I "%DSM_DIR%" > DSM_DIR_CHECK.TST
    FOR %I IN (DSM_DIR_CHECK.TST) DO SET DSM_DIR_CHECK=%~zI
    IF %DSM_DIR_CHECK% EQU 0 SET PATH=%DSM_DIR%;%PATH%
    DEL DSM_DIR_CHECK.TST
    dsmc query session -optfile=\qq[$dsm-opt-file]
    dsmcutil install scheduler /name:"IBM Spectrum Protect Scheduler: \qq[$NODENAME]" /node:\qq[$NODENAME] /password:\qq[$password] /autostart:no /startnow:no /optfile:"\qq[$dsm-opt-file]"
    SC.EXE CONFIG "IBM Spectrum Protect Scheduler: \qq[$NODENAME]" obj= "WMATA\ITIOISPSQLSRV" password= ""
    dsmcutil install cad /name:"IBM Spectrum Protect Acceptor: \qq[$NODENAME]" /node:\qq[$NODENAME] /password:\qq[$password] /autostart:no /startnow:no /cadschedname:"IBM Spectrum Protect Scheduler: \qq[$NODENAME]" /optfile:"\qq[$dsm-opt-file]"
    powershell "$s=(New-Object -COM WScript.Shell).CreateShortcut('\qq[$node-base-directory]\\\qq[$dsm-shortcut-name]');$s.TargetPath='\qq[$baapi-product-directory]\\dsm.exe';$s.Arguments='\\"-optfile=\qq[$dsm-opt-file]\\"';$s.Save()"
    powershell "$s=(New-Object -COM WScript.Shell).CreateShortcut('\qq[$node-base-directory]\\\qq[$dsmc-shortcut-name]');$s.TargetPath='\qq[$baapi-product-directory]\\dsmc.exe';$s.Arguments='\\"-optfile=\qq[$dsm-opt-file]\\"';$s.Save()"
    powershell "$s=(New-Object -COM WScript.Shell).CreateShortcut('\qq[$node-base-directory]\\\qq[$tdpsql-shortcut-name]');$s.TargetPath='\qq[$dp4sql-product-directory]\\tdpsql.exe';$s.Arguments='\\"/tsmoptfile=\qq[$dsm-opt-file] /configfile=\qq[$tdpsql-cfg-file]\\"';$s.Save()"

    ECHO BACKUPDESTINATION  TSM > \qq[$tdpsql-cfg-file]
    ECHO BACKUPMETHOD       LEGACY >> \qq[$tdpsql-cfg-file]
    ECHO LOGFILE            \qq[$node-base-directory]\tdpsql.log >> \qq[$tdpsql-cfg-file]
    ECHO LOGPRUNE           \qq[$log-prune] >> \qq[$tdpsql-cfg-file]
    ECHO MOUNTWAIT          YES >> \qq[$tdpsql-cfg-file]
    ECHO SQLAUTHENTICATION  INTEGRATED >> \qq[$tdpsql-cfg-file]
    ECHO SQLSERVER          lpc:\qq[$sql-server-instance-name] >> \qq[$tdpsql-cfg-file]
    ECHO STRIPES            \qq[$default-stripes] >> \qq[$tdpsql-cfg-file]

    MKDIR \qq[$scripts-base-directory]
    CD /D \qq[$scripts-base-directory]

    ECHO CHCP 1252 > \qq[$scripts-base-directory]\MMM_FULL_BACKUP.BAT
    ECHO SET DSM_DIR=\qq[$baapi-product-directory] >> \qq[$scripts-base-directory]\MMM_FULL_BACKUP.BAT
    ECHO SET PATH=^%DSM_DIR^%;^%PATH^% >> \qq[$scripts-base-directory]\MMM_FULL_BACKUP.BAT
    ECHO PUSHD . >> \qq[$scripts-base-directory]\MMM_FULL_BACKUP.BAT
    ECHO CHDIR /D "\qq[$dp4sql-product-directory]" >> \qq[$scripts-base-directory]\MMM_FULL_BACKUP.BAT
    ECHO SET RC=0 >> \qq[$scripts-base-directory]\MMM_FULL_BACKUP.BAT
    ECHO TDPSQLC BACKUP master,model,msdb FULL /TSMOPTFILE="\qq[$dsm-opt-file]" /CONFIGFILE="\qq[$tdpsql-cfg-file]" >> \qq[$scripts-base-directory]\MMM_FULL_BACKUP.BAT
    ECHO SET RC=^%ERRORLEVEL^% >> \qq[$scripts-base-directory]\MMM_FULL_BACKUP.BAT
    ECHO POPD >> \qq[$scripts-base-directory]\MMM_FULL_BACKUP.BAT
    ECHO EXIT /B ^%RC^% >> \qq[$scripts-base-directory]\MMM_FULL_BACKUP.BAT

    ECHO CHCP 1252 > \qq[$scripts-base-directory]\FULL_BACKUP.BAT
    ECHO SET DSM_DIR=\qq[$baapi-product-directory] >> \qq[$scripts-base-directory]\FULL_BACKUP.BAT
    ECHO SET PATH=^%DSM_DIR^%;^%PATH^% >> \qq[$scripts-base-directory]\FULL_BACKUP.BAT
    ECHO PUSHD . >> \qq[$scripts-base-directory]\FULL_BACKUP.BAT
    ECHO CHDIR /D "\qq[$dp4sql-product-directory]" >> \qq[$scripts-base-directory]\FULL_BACKUP.BAT
    ECHO SET RC=0 >> \qq[$scripts-base-directory]\FULL_BACKUP.BAT
    ECHO TDPSQLC BACKUP * FULL \qq[$EXCLUDEDB] /TSMOPTFILE="\qq[$dsm-opt-file]" /CONFIGFILE="\qq[$tdpsql-cfg-file]" >> \qq[$scripts-base-directory]\FULL_BACKUP.BAT
    ECHO SET RC=^%ERRORLEVEL^% >> \qq[$scripts-base-directory]\FULL_BACKUP.BAT
    ECHO POPD >> \qq[$scripts-base-directory]\FULL_BACKUP.BAT
    ECHO EXIT /B ^%RC^% >> \qq[$scripts-base-directory]\FULL_BACKUP.BAT

    ECHO CHCP 1252 > \qq[$scripts-base-directory]\DIFF_BACKUP.BAT
    ECHO SET DSM_DIR=\qq[$baapi-product-directory] >> \qq[$scripts-base-directory]\DIFF_BACKUP.BAT
    ECHO SET PATH=^%DSM_DIR^%;^%PATH^% >> \qq[$scripts-base-directory]\DIFF_BACKUP.BAT
    ECHO PUSHD . >> \qq[$scripts-base-directory]\DIFF_BACKUP.BAT
    ECHO CHDIR /D "\qq[$dp4sql-product-directory]" >> \qq[$scripts-base-directory]\DIFF_BACKUP.BAT
    ECHO SET RC=0 >> \qq[$scripts-base-directory]\DIFF_BACKUP.BAT
    ECHO TDPSQLC BACKUP * DIFFFULL \qq[$EXCLUDEDB] /TSMOPTFILE="\qq[$dsm-opt-file]" /CONFIGFILE="\qq[$tdpsql-cfg-file]" >> \qq[$scripts-base-directory]\DIFF_BACKUP.BAT
    ECHO SET RC=^%ERRORLEVEL^% >> \qq[$scripts-base-directory]\DIFF_BACKUP.BAT
    ECHO POPD >> \qq[$scripts-base-directory]\DIFF_BACKUP.BAT
    ECHO EXIT /B ^%RC^% >> \qq[$scripts-base-directory]\DIFF_BACKUP.BAT

    ECHO CHCP 1252 > \qq[$scripts-base-directory]\LOGS_BACKUP.BAT
    ECHO SET DSM_DIR=\qq[$baapi-product-directory] >> \qq[$scripts-base-directory]\LOGS_BACKUP.BAT
    ECHO SET PATH=^%DSM_DIR^%;^%PATH^% >> \qq[$scripts-base-directory]\LOGS_BACKUP.BAT
    ECHO PUSHD . >> \qq[$scripts-base-directory]\LOGS_BACKUP.BAT
    ECHO CD /D "\qq[$dp4sql-product-directory]" >> \qq[$scripts-base-directory]\LOGS_BACKUP.BAT
    ECHO SET RC=0 >> \qq[$scripts-base-directory]\LOGS_BACKUP.BAT
    ECHO TDPSQLC BACKUP * Log \qq[$EXCLUDEDB] /Truncate=YES /TSMOPTFILE="\qq[$dsm-opt-file]" /CONFIGFILE="\qq[$tdpsql-cfg-file]" >> \qq[$scripts-base-directory]\LOGS_BACKUP.BAT
    ECHO SET RC=^%ERRORLEVEL^% >> \qq[$scripts-base-directory]\LOGS_BACKUP.BAT
    ECHO POPD >> \qq[$scripts-base-directory]\LOGS_BACKUP.BAT
    ECHO EXIT /B ^%RC^% >> \qq[$scripts-base-directory]\LOGS_BACKUP.BAT
    ENDOFPASTEABLECONFIGURATIONFILES
    for @exclude-dbs -> $db {
        put q:to/ENDOFPASTEABLECONFIGURATIONFILESEXCLUDEDB/;
        ECHO CHCP 1252 > \qq[$scripts-base-directory]\FULL_BACKUP_\qq[$db].BAT
        ECHO SET DSM_DIR=\qq[$baapi-product-directory] >> \qq[$scripts-base-directory]\FULL_BACKUP_\qq[$db].BAT
        ECHO SET PATH=^%DSM_DIR^%;^%PATH^% >> \qq[$scripts-base-directory]\FULL_BACKUP_\qq[$db].BAT
        ECHO PUSHD . >> \qq[$scripts-base-directory]\FULL_BACKUP_\qq[$db].BAT
        ECHO CHDIR /D "\qq[$dp4sql-product-directory]" >> \qq[$scripts-base-directory]\FULL_BACKUP_\qq[$db].BAT
        ECHO SET RC=0 >> \qq[$scripts-base-directory]\FULL_BACKUP_\qq[$db].BAT
        ECHO TDPSQLC BACKUP \qq[$db] FULL /TSMOPTFILE="\qq[$dsm-opt-file]" /CONFIGFILE="\qq[$tdpsql-cfg-file]" >> \qq[$scripts-base-directory]\FULL_BACKUP_\qq[$db].BAT
        ECHO SET RC=^%ERRORLEVEL^% >> \qq[$scripts-base-directory]\FULL_BACKUP_\qq[$db].BAT
        ECHO POPD >> \qq[$scripts-base-directory]\FULL_BACKUP_\qq[$db].BAT
        ECHO EXIT /B ^%RC^% >> \qq[$scripts-base-directory]\FULL_BACKUP_\qq[$db].BAT

        ECHO CHCP 1252 > \qq[$scripts-base-directory]\DIFF_BACKUP_\qq[$db].BAT
        ECHO SET DSM_DIR=\qq[$baapi-product-directory] >> \qq[$scripts-base-directory]\DIFF_BACKUP_\qq[$db].BAT
        ECHO SET PATH=^%DSM_DIR^%;^%PATH^% >> \qq[$scripts-base-directory]\DIFF_BACKUP_\qq[$db].BAT
        ECHO PUSHD . >> \qq[$scripts-base-directory]\DIFF_BACKUP_\qq[$db].BAT
        ECHO CHDIR /D "\qq[$dp4sql-product-directory]" >> \qq[$scripts-base-directory]\DIFF_BACKUP_\qq[$db].BAT
        ECHO SET RC=0 >> \qq[$scripts-base-directory]\DIFF_BACKUP_\qq[$db].BAT
        ECHO TDPSQLC BACKUP \qq[$db] DIFFFULL /TSMOPTFILE="\qq[$dsm-opt-file]" /CONFIGFILE="\qq[$tdpsql-cfg-file]" >> \qq[$scripts-base-directory]\DIFF_BACKUP_\qq[$db].BAT
        ECHO SET RC=^%ERRORLEVEL^% >> \qq[$scripts-base-directory]\DIFF_BACKUP_\qq[$db].BAT
        ECHO POPD >> \qq[$scripts-base-directory]\DIFF_BACKUP_\qq[$db].BAT
        ECHO EXIT /B ^%RC^% >> \qq[$scripts-base-directory]\DIFF_BACKUP_\qq[$db].BAT

        ECHO CHCP 1252 > \qq[$scripts-base-directory]\LOGS_BACKUP_\qq[$db].BAT
        ECHO SET DSM_DIR=\qq[$baapi-product-directory] >> \qq[$scripts-base-directory]\LOGS_BACKUP_\qq[$db].BAT
        ECHO SET PATH=^%DSM_DIR^%;^%PATH^% >> \qq[$scripts-base-directory]\LOGS_BACKUP_\qq[$db].BAT
        ECHO PUSHD . >> \qq[$scripts-base-directory]\LOGS_BACKUP_\qq[$db].BAT
        ECHO CD /D "\qq[$dp4sql-product-directory]" >> \qq[$scripts-base-directory]\LOGS_BACKUP_\qq[$db].BAT
        ECHO SET RC=0 >> \qq[$scripts-base-directory]\LOGS_BACKUP_\qq[$db].BAT
        ECHO TDPSQLC BACKUP \qq[$db] Log /Truncate=YES /TSMOPTFILE="\qq[$dsm-opt-file]" /CONFIGFILE="\qq[$tdpsql-cfg-file]" >> \qq[$scripts-base-directory]\LOGS_BACKUP_\qq[$db].BAT
        ECHO SET RC=^%ERRORLEVEL^% >> \qq[$scripts-base-directory]\LOGS_BACKUP_\qq[$db].BAT
        ECHO POPD >> \qq[$scripts-base-directory]\LOGS_BACKUP_\qq[$db].BAT
        ECHO EXIT /B ^%RC^% >> \qq[$scripts-base-directory]\LOGS_BACKUP_\qq[$db].BAT
        ENDOFPASTEABLECONFIGURATIONFILESEXCLUDEDB
    }
}

#   DEFINE SCHEDULE
#   DEFINE SCHEDULE SQL USSBYSQLD806DTC_FULL ACTION=COMMAND OBJECTS='"C:\Program Files\Tivoli\TSM\TDPSql\SCRIPTS\USSBYSQLD806DTC_FULL_BACKUP.CMD"' STARTTIME=21:00:00
#   DEFINE SCHEDULE SQL USSBYSQLD806DTC_LOGS ACTION=COMMAND OBJECTS='"C:\Program Files\Tivoli\TSM\TDPSql\SCRIPTS\USSBYSQLD806DTC_LOGS_BACKUP.CMD"' STARTTIME=00:30:00 PERIOD=4 PERUNITS=HOURS DURATION=30 DURUNITS=MINUTES


define-STGPOOLs;
update-BACKUP-STGPOOL-script;
define-policy-stack;
define-cloptset($node) if $node;
pasteable-backup-archive-configuration-file();
pasteable-dp4sql-configuration-files();

=finish

RTSQL (NeverFail)                                                                                                   [      S]@MMM_FULL_BACKUP
CleverCAD                   35  Current Size:43GB   Estimated Max Size:85GB     [hourly]@LOGS_BACKUP_CleverCAD.BAT  [SMTWTFS]@FULL_BACKUP_CleverCAD.BAT
CleverCAD_CADStore          720 Current Size:5.8 TB Estimated Max Size 8TB                                          [S      ]@FULL_BACKUP_CleverCAD_CADStore.BAT    [ MTWTFS]@DIFF_BACKUP_CleverCAD_CADStore.BAT
CleverCAD_ProcessController 35  Current Size:20MB                                                                   [ M     ]@FULL_BACKUP.BAT                       [S TWTFS]@DIFF_BACKUP.BAT
CleverCAD_Staging               Current Size:2GB                                                                    [ M     ]@FULL_BACKUP.BAT                       [S TWTFS]@DIFF_BACKUP.BAT
Schedule                        Current Size:23MB   Estimated Max Size: 25GB                                        [ M     ]@FULL_BACKUP.BAT                       [S TWTFS]@DIFF_BACKUP.BAT
Security                        Current Size:23MB                                                                   [ M     ]@FULL_BACKUP.BAT                       [S TWTFS]@DIFF_BACKUP.BAT
Live Schedule                   Current Size:23MB   Estimated Max Size: 25GB                                        [ M     ]@FULL_BACKUP.BAT                       [S TWTFS]@DIFF_BACKUP.BAT
CW_Adjustments                  Current Size:23MB                                                                   [ M     ]@FULL_BACKUP.BAT                       [S TWTFS]@DIFF_BACKUP.BAT

Current Backup Cycle:  
               N/A, CleverWorks Databases not currently backed up
               CleverCAD, Transactional Log Backups every hour, Full Backups Daily
               CleverCAD_CADStore, Full Backup Weekly, Differentials Daily
               Other CAD Databases not backed up
               
Recommended Backup Cycle:
               For CleverWorks Databases, Full Backup once a week, Differentials once daily every other day , not run between the hours of 12-4am
               For CleverCAD and CADStore databases, maintain a minimum of existing cycle
               For remaining CAD Databases, follow Cleverworks Schedules

RPSQL (NeverFail)
CleverReportsDW                 Current Size:2.6 TB Estimated Max Size for 2 Years: 2.8TB
CleverReportsWeb                Current Size:9GB    Estimated Max Size: 9GB
CRPreprocessor                  Current Size:450GB  Estimated Max Size: 475GB
Ridecheck_Washington            Current Size:1.3TB  Estimated Max Size : N/A Ongoing, no retention limit
BuslinkAS                       Current Size:7GB
BuslinkDS                       Current Size:1GB
FleetManager                    Current Size:1GB
RSMIngester                     Current Size:70GB   Estimated Max Size: 100GB

Current Backup Cycle:  
               N/A, Backup Volume too small on SQL Server to backup any databases (6GB Volume)
Recommended Backup Cycle:
               Full Backup once a week, Differentials once daily every other day , not run between the hours of 12-6am

AVMSQL (NeverFail)
AVM3                            Current Size:210GB  Estimated Max Size for 30 Days Detail\365 Summary: 250GB (If Wmata decide to hold Fault data for longer, the size of the database grows exponentially)
AVM3Reports                     Current Size: 6GB   Estimated Max Size: 10GB

Current Backup Cycle:  
               N/A, Backup Volume too small on SQL Server to backup any databases (6GB Volume)
Recommended Backup Cycle:
               Full Backup once a week, Differentials once daily every other day, not run between the hours of 12-6am

Smartyard SQL (SQL Mirroring)
Smartyard                       Current Size: 140GB Estimated Max Size: 160GB
Smartyard_Store                 Current Size: 470GB

Current Backup Cycle:  
               Transactional Log Backups every 4 Hours
               No Database Backups currently done
Recommended Backup Cycle:
               Full Backup once a week, Differentials once daily every other day, not run between the hours of 5am-4pm


RTLSSQL (SQL Mirroring)
Locsystem                       Current Size: 66GB  Estimated Max Size: 100GB

Current Backup Cycle:  
               Transactional Log Backups every 4 Hours
               No Database Backups currently done
Recommended Backup Cycle:
               Full Backup once a week, Differentials once daily every other day, not run between the hours of 5am-4pm

Master\Model\MSDB-
For all 3 databases, CleverDevices recommendation is a minimum of Monthly Backups of the (3) System Databases
For SQL Servers with no High Availability Schema, we recommend these databases be backed up once weekly 

BackupService and Neverfail
-	Consultants asked if we can add their backup service to our Neverfail Manager so that the service is turned on and off with a Neverfail failover (No I don’t know the name of the service yet),  But I assume that this would be fine

BackupServiceAccount and granting Roles
-	In terms of the Domain Account Backup Consultants requested, this will need to be handled by Wmata
-	In terms of granting rights to that account for Software to use, what was requested was access to the BackupOperators role in SQL Server, while Clever Can do the work on the SQL Side, such permissions would need to be approved first by Wmata.  While a database can be backed up with the db_operators role, restores would require much much higher level privileges

Dedicated NIC Card for Backups
Clever Devices is not against having a dedicated Network Card solely for backups, and we also encourage it as it increases bandwidth between Enterprise Backups and the SQL Servers, the decision would have to be made on Wmata’s end 

for Physical Servers (Whether you have the available additional NIC cards to add to the server and Net Infrastructure to support it) and it would have to be identical adds on both NF nodes
for Virtual SQL Servers(New Virtual Nics would need to be configured for the Virtual machines), Wmata would also need to see of the VMware infra has the bandwidth to support the additional card, such changes must also be made on both nodes of virtual NF machines

Accessing SQL Server through IP Address and not Hostname
I have spoken with Clever Group and @Rick Burns is correct, no IP swaps are made at  Wmata for NeverFail only Hostnames
If you decide to use dedicated Network cards for Backups this point is moot 
But if you don't, Enterprise Backup must someone have have a notice trigger that it uses to know which Neverfail node is active
For such reasons, it might be advisable for Backups to reference via Hostnames as well, if not it may be more difficult in make the assertion on which node is actie to perform  a backup
